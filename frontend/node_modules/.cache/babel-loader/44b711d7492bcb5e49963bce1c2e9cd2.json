{"ast":null,"code":"import _classCallCheck from \"/home/nathanlee/Workspace/Litsearch (Nathan Lee_s Project)/Litsearch/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nathanlee/Workspace/Litsearch (Nathan Lee_s Project)/Litsearch/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nathanlee/Workspace/Litsearch (Nathan Lee_s Project)/Litsearch/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nathanlee/Workspace/Litsearch (Nathan Lee_s Project)/Litsearch/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nathanlee/Workspace/Litsearch (Nathan Lee_s Project)/Litsearch/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nathanlee/Workspace/Litsearch (Nathan Lee_s Project)/Litsearch/frontend/src/RightContainer.jsx\";\nimport React from 'react';\nimport ThemeSelect from './ThemeSelect';\n\nvar RightContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RightContainer, _React$Component);\n\n  function RightContainer() {\n    _classCallCheck(this, RightContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RightContainer).apply(this, arguments));\n  }\n\n  _createClass(RightContainer, [{\n    key: \"_renderQuotes\",\n    value: function _renderQuotes() {\n      var quotes = this.props.quotes || []; // If there's at least one quote, render a \"Quotes:\" header\n      // For each quote, we're rendering it as a list item\n      // TODO: instead of rendering a list item, render a custom card component\n      // This is your homework! :)\n\n      return React.createElement(\"div\", {\n        className: \"themed-quotes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, quotes.length > 0 ? React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Quotes:\") : null, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, quotes.map(function (quote) {\n        return React.createElement(\"li\", {\n          key: quote,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, quote);\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"right-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(ThemeSelect, {\n        dispatch: this.props.dispatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), this._renderQuotes());\n    }\n  }]);\n\n  return RightContainer;\n}(React.Component);\n\nexport default RightContainer;","map":{"version":3,"sources":["/home/nathanlee/Workspace/Litsearch (Nathan Lee_s Project)/Litsearch/frontend/src/RightContainer.jsx"],"names":["React","ThemeSelect","RightContainer","quotes","props","length","map","quote","dispatch","_renderQuotes","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,c;;;;;;;;;;;;;oCAEc;AACZ,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAX,IAAqB,EAApC,CADY,CAGZ;AACA;AACA;AACA;;AACA,aACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,MAAM,CAACE,MAAP,GAAgB,CAAhB,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAApB,GAAuC,IAD5C,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,MAAM,CAACG,GAAP,CAAW,UAAAC,KAAK;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBA,KAAjB,CAAJ;AAAA,OAAhB,CADL,CAFJ,CADJ;AAQH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGK,KAAKC,aAAL,EAHL,CADJ;AAOH;;;;EA3BwBT,KAAK,CAACU,S;;AA+BnC,eAAeR,cAAf","sourcesContent":["import React from 'react';\nimport ThemeSelect from './ThemeSelect';\n\nclass RightContainer extends React.Component {\n\n    _renderQuotes() {\n        const quotes = this.props.quotes || [];\n\n        // If there's at least one quote, render a \"Quotes:\" header\n        // For each quote, we're rendering it as a list item\n        // TODO: instead of rendering a list item, render a custom card component\n        // This is your homework! :)\n        return (\n            <div className='themed-quotes'>\n                {quotes.length > 0 ? <h2>Quotes:</h2> : null}\n                <ul>\n                    {quotes.map(quote => <li key={quote}>{quote}</li>)}\n                </ul>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className='right-container'>\n                <ThemeSelect dispatch={this.props.dispatch} />\n                <hr />\n                {this._renderQuotes()}\n            </div>\n        );\n    }\n\n}\n\nexport default RightContainer;\n"]},"metadata":{},"sourceType":"module"}